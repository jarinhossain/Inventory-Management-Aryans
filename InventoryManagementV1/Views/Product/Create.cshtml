@model InventoryManagementV1.Models.Product
@{
    Layout = "~/Views/Shared/layout.cshtml";
    List<SelectListItem> Gender = new List<SelectListItem>();
    Gender.Add(new SelectListItem() { Text = "Male" });
    Gender.Add(new SelectListItem() { Text = "Female" });
}

<!DOCTYPE html>




<section class="content-header"></section>
<section class="content">
    <div class="row">
        <!-- left column -->
        <div class="col-md-8">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border text-center">
                    <h3 class="box-title">Product Create</h3>
                </div>
                <!-- /.box-header -->

                @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    <div class="box-body">
                        <div class="box-header">
                            <h3 class="box-title"><b>Basic Information</b></h3>
                            <hr />
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Product No</label>
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.Product_No, new { @Class = "form-control", @placeholder = "Product No" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Product Name</label>
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.Product_Name, new { @Class = "form-control", @placeholder = "Product Name" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Product Details</label>
                            <div class="col-md-6">
                                @Html.TextAreaFor(m => m.Product_Details, new { @Class = "form-control", @placeholder = "Product Details" })
                            </div>
                        </div>
                        <div class="form-group">

                            <label class="control-label col-md-3">Gender</label>
                            <div class="col-md-6">
                                @Html.DropDownList("Gender", @Gender, "Select Gender", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                        </div>
                        <div class="form-group">

                            <label class="control-label col-md-3">Country Id</label>
                            <div class="col-md-6">
                                @Html.DropDownList("Country_Id", (List<SelectListItem>)ViewData["CountryList"], "Select Country", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                        </div>
                       
                        <div class="box-header">
                            <h3 class="box-title"><b>Product Quantity Map Create</b></h3>
                            <hr />
                        </div>
                      
                     
                        <div class="form-group">
                            <label class="control-label col-md-3">Material Id</label>

                            <div class="col-md-6">
                                @Html.DropDownList("Material_Id", (List<SelectListItem>)ViewData["MaterialList"], "Select Material", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                           </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Category Id</label>

                            <div class="col-md-6">
                                @Html.DropDownList("Category_Id", (List<SelectListItem>)ViewData["CategoryList"], "Select Category", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Size Group Id</label>

                            <div class="col-md-6">
                                @Html.DropDownList("Size_Group_Id", (List<SelectListItem>)ViewData["SizeList"], "Select Size Group", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Color Id</label>
                            <div class="col-md-6">
                                @Html.DropDownList("Color_Id", (List<SelectListItem>)ViewData["ColorList"], "Select Color", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>

                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Quantity</label>
                            <div class="col-md-6">
                                @Html.TextBox("Quantity", null, new { @Class = "form-control", @placeholder = "Quantity" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Price</label>
                            <div class="col-md-6">
                                @Html.TextBox("Price", null, new { @Class = "form-control", @placeholder = "price" })
                            </div>
                        </div>
                     
                            @*<div class="form-group">
                <label class="control-label col-md-3">Hired date</label>
                <div class="col-md-6">
                    @Html.TextBoxFor(m => m.Hired_Date, "{0:dd/MM/yyyy}", new { @class = "datefield form-control", @placeholder = "dd/MM/yyyy" })

                </div>
            </div>*@
                            <div class="form-group">
                                <div class="col-md-3"></div>
                                <div class="col-md-5">
                                    <input type="button" id="addBtn" value="Add" class="btn btn-info" />
                                    <input type="submit" value="Save" class="btn btn-info" />
                                    <input type="submit" value="Reset" id="reset" class="btn btn-info" />
                                </div>

                            </div>
                        </div>
                }

                    <table id="productQuantityTable" class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Material</th>
                                <th>Category</th>
                                <th>Size Group</th>
                                <th>Color</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Option</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
</div>
            
            <!-- /.box -->

        </div>
        <!--/.col (left) -->

    </div>
    <!-- /.row -->
</section>

@section scripts{
    <script>
       
        $(document).ready(function () {
            $("table").on('click', '.deleteButton', function () {
                $(this).closest('tr').remove();
            });

            $("#addBtn").click(function () {
                if ($("#Material_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Material Id is required", "error").then(function () {
                        $("#Material_Id").focus();
                    });
                }

                else if ($("#Category_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Category Id is required", "error").then(function () {
                        $("#Category_Id").focus();
                    });
                }
                else if ($("#Size_Group_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Size Group Id is required", "error").then(function () {
                        $("#Size_Group_Id").focus();
                    });
                }
                else if ($("#Color_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Color Id is required", "error").then(function () {
                        $("#Color_Id").focus();
                    });
                }
                else if ($("#Quantity").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Quantity is required", "error").then(function () {
                        $("#Quantity").focus();
                    });
                }
                else if ($("#Price").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Price is required", "error").then(function () {
                        $("#Price").focus();
                    });
                }
                else {
                    var row = '<tr>'
                         
                           + '<td>' + $('#Material_Id option:selected').text() + '</td>'
                           + '<td>' + $('#Category_Id option:selected').text() + '</td>'
                           + '<td>' + $('#Size_Group_Id option:selected').text() + '</td>'
                            + '<td>' + $('#Color_Id option:selected').text() + '</td>'
                           + '<td>' + $('#Quantity').val() + '</td>'
                            + '<td>' + $('#Price').val() + '</td>'
                               + '<td>' + '<button class="deleteButton">Delete</button>' + '</td>'
                      + '</tr>';
                    $("#productQuantityTable > tbody:last-child").append(row);

                }
              
            });
        });

    </script>

    <script>
        $(document).ready(function () {
            ////

            $("form").submit(function (event) {

                if ($("#Product_No").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Product No is required", "error").then(function () {
                        $("#Product_No").focus();
                    });
                }

                else if ($("#Product_Name").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Product Name is required", "error").then(function () {
                        $("#Product_Name").focus();
                    });
                }
                else if ($("#Product_Details").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Product Details is required", "error").then(function () {
                        $("#Product_Details").focus();
                    });
                }

                else if ($("#Price").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Price is required", "error").then(function () {
                        $("#Price").focus();
                    });
                }

                else if ($("#Country_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Country Id is required", "error").then(function () {
                        $("#Country_Id").focus();
                    });
                }

                else {
                    event.preventDefault();
                    //parse table
                    var productQuantityArray = [];
                    var trList = $('#productQuantityTable > tbody').find('tr');

                    $(trList).each(function (i, el) {
                       var tds = $(this).find('td');
                      
                        var material = $(tds).eq(0).text();
                        var category = $(tds).eq(1).text();
                        var sizegroup = $(tds).eq(2).text();
                        var color = $(tds).eq(3).text();
                        var quantity =  $(tds).eq(4).text();
                        var price =  $(tds).eq(5).text();

                        /// get value by text
                        var materialValue = $('select[name="Material_Id"] > option:contains("' + material + '")').val();
                        var categoryValue = $('select[name="Category_Id"] > option:contains("' + category + '")').val();
                        var sizegroupValue = $('select[name="Size_Group_Id"] > option:contains("' + sizegroup + '")').val();
                        var colorValue = $('select[name="Color_Id"] > option:contains("' + color + '")').val();

                        var obj = {
                            Material_Id: materialValue,
                            Category_Id: categoryValue,
                            Size_Group_Id: sizegroupValue,
                            Color_Id: colorValue,
                            Quantity: quantity,
                            Price:price,
                        };

                        productQuantityArray.push(obj);
                    })
                    console.log(productQuantityArray);

                    $.ajax({
                        url: "/product/create",
                        type: "post",
                        data:
                       {

                           Product_No: $("#Product_No").val(),
                           Product_Name: $("#Product_Name").val(),
                           Product_Details: $("#Product_Details").val(),
                           Gender: $("#Gender").val(),
                           Country_Id: $("#Country_Id").val(),
                           productQuantityList: productQuantityArray,
                         
                          
                       },
                        success: function (data) {
                            if (data == "true")
                                swal("success", "successfully saved", "success");
                               
                            else
                                swal("failed", data, "error");
                            resetfunction();
                        },
                        error: function (data) {
                            alert(data)
                        },

                    })
                }

            });
            function resetfunction() {

                $("#Product_No").val("");
                $("#Product_Name").val("");
                $("#Product_Details").val("");
                $("#Gender").val("");
                $("#Country_Id").val("");
                $("#Material_Id").val("");
                $("#Category_Id").val("");
                $("#Size_Group_Id").val("");
                $("#Color_Id").val("");
                $("#Quantity").val("");
                $("#Price").val("");

            }
            $("#reset").click(function () {

                resetFunction();

            });
        });
    </script>
}

