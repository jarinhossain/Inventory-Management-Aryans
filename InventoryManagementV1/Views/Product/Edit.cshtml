@model InventoryManagementV1.Models.Product
@{
    Layout = "~/Views/Shared/layout.cshtml";
}

<!DOCTYPE html>




<section class="content-header"></section>
<section class="content">
    <div class="row">
        <!-- left column -->
        <div class="col-md-8">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Product Edit</h3>
                </div>
                <!-- /.box-header -->

                @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.HiddenFor(m => m.Id)
                    <div class="box-body">

                        <div class="form-group">
                            <label class="control-label col-md-3">Product No<span style="color:red;">*</span></label>
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.Product_No, new { @Class = "form-control", @placeholder = "Product No" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Product Name<span style="color:red;">*</span></label>
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.Product_Name, new { @Class = "form-control", @placeholder = "Product Name" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Product Details</label>
                            <div class="col-md-6">
                                @Html.TextBoxFor(m => m.Product_Details, new { @Class = "form-control", @placeholder = "Product Details" })
                            </div>
                        </div>
                        <div class="form-group">

                            <label class="control-label col-md-3">Gender</label>
                            <div class="col-md-6">
                                @Html.DropDownList("Gender_Id", (List<SelectListItem>)ViewData["GenderList"], "Select Gender", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                        </div>                        
                        <div class="form-group">
                            <label class="control-label col-md-3">Country</label>

                            <div class="col-md-6">
                                @Html.DropDownList("Country_Id", (List<SelectListItem>)ViewData["CountryList"], "Select Country", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                        </div>
                            <div class="form-group">
                                <div class="col-md-10"></div>
                                <div class="col-md-2">
                                    <input type="submit" id="saveBtn" value="Update" class="btn btn-info" />
                                </div>

                            </div>
                      
                        <div class="box-header">
                            <h3 class="box-title"><b>Product Quantity Map Edit</b></h3>
                            <hr />
                        </div>                       
                        <div class="form-group">
                            <label class="control-label col-md-3">Material<span style="color:red;">*</span></label>

                            <div class="col-md-6">
                                @Html.DropDownList("Material_Id", (List<SelectListItem>)ViewData["MaterialList"], "Select Material", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Category<span style="color:red;">*</span></label>

                            <div class="col-md-6">
                                @Html.DropDownList("Category_Id", (List<SelectListItem>)ViewData["CategoryList"], "Select Category", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Size Group<span style="color:red;">*</span></label>
                            <div class="col-md-6">
                                @Html.DropDownList("Size_Group_Id", (List<SelectListItem>)ViewData["SizeList"], "Select Size Group", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Color<span style="color:red;">*</span></label>
                            <div class="col-md-6">
                                @Html.DropDownList("Color_Id", (List<SelectListItem>)ViewData["ColorList"], "Select Color", new { @class = "form-control editor-field", @placeholder = "Select" })
                            </div>

                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Quantity<span style="color:red;">*</span></label>
                            <div class="col-md-6">
                                @Html.TextBox("Quantity", null, new { @Class = "form-control", @placeholder = "Quantity" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Purchase Price<span style="color:red;">*</span></label>
                            <div class="col-md-6">
                                @Html.TextBox("Price", null, new { @Class = "form-control", @placeholder = "price" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Selling Price<span style="color:red;">*</span></label>
                            <div class="col-md-6">
                                @Html.TextBox("Selling_Price", null, new { @Class = "form-control", @placeholder = "Selling price" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                               
                            </div>
                            <div class="col-md-5">
                                <input type="hidden" id="productQuantityHidden" />
                                <input type="button" id="addBtn" value="Add" class="btn btn-info" />
                                <input type="button"  id="updateBtn" value="Update" class="btn btn-info update" />
                                <input type="button" id="ProductQuantityCancelBtn" value="Cancel" class="btn btn-info" />


                            </div>

                        </div>
                    </div>
                }
               
               <table id="productQuantityTable" class="table table-bordered table-hover table-striped">
                    <thead>
                        <tr class="info">
                            <th>Material</th>
                            <th>Category</th>
                            <th>Size Group</th>
                            <th>Color</th>
                            <th>Quantity</th>
                            <th>Purchase Price</th>
                            <th>Selling Price</th>
                            <th>Option</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (InventoryManagementV1.Models.ProductQuantityMap product in (IEnumerable<InventoryManagementV1.Models.ProductQuantityMap>)Model.ProductQuantityMaps)
                        {
                            <tr>
                                <td>
                                    @if (@product.Material_Id != null)
                                    {
                                        @product.Material.Material_Name
                                    }
                                </td>
                                <td>
                                    @if (@product.Category_Id != null)
                                    {
                                        @product.Category.Category_Name
                                    }
                                </td>
                                <td>
                                    @if (@product.Size_Group_Id != null)
                                    {
                                        @product.SizeGroup.Size_Group_Range
                                    }
                                </td>
                                <td>
                                    @if (@product.Color_Id != null)
                                    {
                                        @product.Color.Color_Name
                                    }
                                </td>
                                <td>@product.Quantity</td>
                                <td>@product.Price</td>
                                <td>@product.Selling_Price</td>
                                <td>
                                    <button id="@product.Id" class="btn btn-primary btn-sm productQuantityEdit">Edit</button>
                                </td>
                                @*<td><input type="text" value="" placeholder="add quantity" id="@product.Id" class="form-control" /></td>*@
                            </tr>
                        }
                    </tbody>

                </table>
              
                </div>

            <!-- /.box -->

        </div>
        <!--/.col (left) -->

    </div>
    <!-- /.row -->
</section>

@section scripts{
    <script>
        $(document).ready(function () {
            $("#updateBtn").hide();
            ProductQuantityreset();
            $("#addBtn").click(function () {
               
                if ($("#Material_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Material is required", "error").then(function () {
                        $("#Material_Id").focus();
                    });
                }

                else if ($("#Category_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Category is required", "error").then(function () {
                        $("#Category_Id").focus();
                    });
                }
                else if ($("#Size_Group_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Size Group is required", "error").then(function () {
                        $("#Size_Group_Id").focus();
                    });
                }
                else if ($("#Color_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Color is required", "error").then(function () {
                        $("#Color_Id").focus();
                    });
                }
                else if ($("#Quantity").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Quantity is required", "error").then(function () {
                        $("#Quantity").focus();
                    });
                }
                else if ($("#Price").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Price is required", "error").then(function () {
                        $("#Price").focus();
                    });
                }
                else if ($("#Selling_Price").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Selling Price is required", "error").then(function () {
                        $("#Selling_Price").focus();
                    });
                }
                else {
                    event.preventDefault();
                    $.ajax({
                        url: "/Product/ProductQuantityCreate",
                        type: "POST",
                        data:
                       {
                           Material_Id: $("#Material_Id").val(),
                           Category_Id: $("#Category_Id").val(),
                           Size_Group_Id: $("#Size_Group_Id").val(),
                           Product_Id: $("#Id").val(),
                           Color_Id: $("#Color_Id").val(),
                           Quantity: $("#Quantity").val(),
                           Price: $("#Price").val(),
                           Selling_Price: $("#Selling_Price").val(),
                           //  productQuantityList: productQuantityArray
                       },
                        success: function (data) {
                            swal("Success", "Successfully Saved", "success").then(function () {
                               
                                productQuantityRowCreate(data);
                                ProductQuantityreset();
                            })
                        },
                        error: function (data) {
                            alert(data)
                        },

                    })
                    function productQuantityRowCreate(productQuantityId)
                    {
                        var row = '<tr>'

                          + '<td>' + $('#Material_Id option:selected').text() + '</td>'
                          + '<td>' + $('#Category_Id option:selected').text() + '</td>'
                          + '<td>' + $('#Size_Group_Id option:selected').text() + '</td>'
                           + '<td>' + $('#Color_Id option:selected').text() + '</td>'
                          + '<td>' + $('#Quantity').val() + '</td>'
                           + '<td>' + $('#Price').val() + '</td>'
                            + '<td>' + $('#Selling_Price').val() + '</td>'
                              + '<td>' + '<button id="' + productQuantityId + '" class="btn btn-primary btn-sm productQuantityEdit">Edit</button>' + '</td>'
                     + '</tr>';
                        $("#productQuantityTable > tbody:last-child").append(row);
                    }
                   
                }
             
            });
            $("#ProductQuantityCancelBtn").click(function () {
                ProductQuantityreset();
                $("#addBtn").show();
                $("#updateBtn").hide();
            });
            //update e click krle nicer table row te id onushare update hbe + db eo update hbe.
            $("#updateBtn").click(function () {

                if ($("#Material_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Material is required", "error").then(function () {
                        $("#Material_Id").focus();
                    });
                }

                else if ($("#Category_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Category is required", "error").then(function () {
                        $("#Category_Id").focus();
                    });
                }
                else if ($("#Size_Group_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Size Group is required", "error").then(function () {
                        $("#Size_Group_Id").focus();
                    });
                }
                else if ($("#Color_Id").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Color is required", "error").then(function () {
                        $("#Color_Id").focus();
                    });
                }
                else if ($("#Quantity").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Quantity is required", "error").then(function () {
                        $("#Quantity").focus();
                    });
                }
                else if ($("#Price").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Price is required", "error").then(function () {
                        $("#Price").focus();
                    });
                }
                else if ($("#Selling_Price").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Selling Price is required", "error").then(function () {
                        $("#Selling_Price").focus();
                    });
                }
                else {
                    var trList = $('#productQuantityTable > tbody').find('tr');
                    var hiddenFieldValue = $('#productQuantityHidden').val(); // hidden id of product quantity map

                    $(trList).each(function (i, el) {
                        var tds = $(this).find('td');

                        var editButton = $(tds).eq(7).find("button")[0]; // get first input field in td
                        var editButtonId = $(editButton).attr('id'); // get edit button id

                        if (editButtonId == hiddenFieldValue) {
                            var material = $('#Material_Id option:selected').text();
                            var category = $('#Category_Id option:selected').text();
                            var sizegroup = $('#Size_Group_Id option:selected').text();
                            var color = $('#Color_Id option:selected').text();
                            var quantity = $("#Quantity").val();
                            var price = $("#Price").val();
                            var sellingprice = $("#Selling_Price").val();

                            $(tds).eq(0).text(material);
                            $(tds).eq(1).text(category);
                            $(tds).eq(2).text(sizegroup);
                            $(tds).eq(3).text(color);
                            $(tds).eq(4).text(quantity);
                            $(tds).eq(5).text(price);
                            $(tds).eq(6).text(sellingprice);
                        }
                    });

                    event.preventDefault();
                    $.ajax({
                        url: "/Product/ProductQuantityEdit",
                        type: "POST",
                        data:
                       {
                           Id: hiddenFieldValue,
                           Material_Id: $("#Material_Id").val(),
                           Category_Id: $("#Category_Id").val(),
                           Size_Group_Id: $("#Size_Group_Id").val(),
                           Color_Id: $("#Color_Id").val(),
                           Quantity: $("#Quantity").val(),
                           Price: $("#Price").val(),
                           Selling_Price: $("#Selling_Price").val(),
                           //  productQuantityList: productQuantityArray
                       },
                        success: function (data) {
                            if (data == "true") {
                                swal("Success", "Successfully Updated", "success").then(function () {
                                    ProductQuantityreset();
                                    $("#addBtn").show();
                                    $("#updateBtn").hide();
                                })
                            }
                            else
                                swal("Failed", data, "error");
                        },
                        error: function (data) {
                            alert(data)
                        },

                    })
                }
               
             
            });
        //table row er Edit e click krle row er data gulu id dhore form er text box show krbe.
            $("table").on('click', '.productQuantityEdit', function () {
                $("#addBtn").hide();
                $("#updateBtn").show();
                $("#ProductQuantityCancelBtn").show();
                var selectedTr = $(this).closest('tr');
                var tds = $(selectedTr).find('td');

                var material = $(tds).eq(0).text().trim();
                var category = $(tds).eq(1).text().trim();
                var SizeGroupRange = $(tds).eq(2).text().trim();
                var color = $(tds).eq(3).text().trim();
                var quantity = $(tds).eq(4).text().trim();
                var price = $(tds).eq(5).text().trim();
                var sellingprice = $(tds).eq(6).text().trim();
                var editButton = $(tds).eq(7).find("button")[0];
                var editButtonId = $(editButton).attr('id'); // get button id 

                // set select tag's option by text
                $("#Material_Id option:contains(" + material + ")").prop('selected', true);
                $("#Category_Id option:contains(" + category + ")").prop('selected', true);
                $("#Size_Group_Id option:contains(" + SizeGroupRange + ")").prop('selected', true);
                $("#Color_Id option:contains(" + color + ")").prop('selected', true);
                $("#Quantity").val(quantity);//set value by html id
                $("#Price").val(price);
                $("#Selling_Price").val(sellingprice);

                $('#productQuantityHidden').val(editButtonId)
            });
            function ProductQuantityreset() {
                $("#Material_Id").val("");
                $("#Category_Id").val("");
                $("#Size_Group_Id").val("");
                $("#Color_Id").val("");
                $("#Quantity").val("");
                $("#Price").val("");
                $("#Selling_Price").val("");
                $("#productQuantityHidden").val("");
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            $("#saveBtn").click(function (event) {
                if ($("#Product_No").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Product_No is required", "error").then(function () {
                        $("#Product_No").focus();
                    });
                }

                else if ($("#Product_Name").val() == "") {
                    event.preventDefault();
                    swal("Failed", "Product Name is required", "error").then(function () {
                        $("#Product_Name").focus();
                    });
                }
                else {
                    event.preventDefault();
                    //var productQuantityArray = [];
                    //var trList = $('#productQuantityTable > tbody').find('tr');

                    //$(trList).each(function (i, el) {
                    //    var tds = $(this).find('td');

                    //    var material = $(tds).eq(0).text();
                    //    var category = $(tds).eq(1).text();
                    //    var sizegroup = $(tds).eq(2).text();
                    //    var color = $(tds).eq(3).text();
                    //    var quantity = $(tds).eq(4).text();
                    //    var price = $(tds).eq(5).text();
                    //    var editButton = $(tds).eq(6).find("button")[0];
                    //    var editButtonId = $(editButton).attr('id');


                    //    /// get value by text
                    //    var materialValue = $('select[name="Material_Id"] > option:contains("' + material + '")').val();
                    //    var categoryValue = $('select[name="Category_Id"] > option:contains("' + category + '")').val();
                    //    var sizegroupValue = $('select[name="Size_Group_Id"] > option:contains("' + sizegroup + '")').val();
                    //    var colorValue = $('select[name="Color_Id"] > option:contains("' + color + '")').val();

                    //    var obj = {
                    //        Material_Id: materialValue,
                    //        Category_Id: categoryValue,
                    //        Size_Group_Id: sizegroupValue,
                    //        Color_Id: colorValue,
                    //        Quantity: quantity,
                    //        Price: price,
                    //        Id: editButtonId
                    //    };

                    //    productQuantityArray.push(obj);
                    //})
                    //console.log(productQuantityArray);
                    $.ajax({
                        url: "/Product/Edit",
                        type: "POST",
                        data:
                       {
                           Id: $("#Id").val(),
                           Product_No: $("#Product_No").val(),
                           Product_Name: $("#Product_Name").val(),
                           Product_Details: $("#Product_Details").val(),
                           Gender_Id: $("#Gender_Id").val(),
                           Country_Id: $("#Country_Id").val(),
                         //  productQuantityList: productQuantityArray
                       },
                        success: function (data) {
                            if (data == "true")
                            {
                                swal("Success", "Successfully Updated", "success").then(function () {
                                    resetfunction();
                                })
                            }
                            else
                                swal("Failed", data, "error");
                        },
                        error: function (data) {
                            alert(data)
                        },

                    })
                }

            });

            function resetfunction() {
                $("#Product_No").val("");
                $("#Product_Name").val("");
                $("#Product_Details").val("");
                $("#Gender_Id").val("");
                $("#Country_Id").val("")
            }
        });
    </script>
}
